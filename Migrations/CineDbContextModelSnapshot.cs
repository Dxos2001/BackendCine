// <auto-generated />
using System;
using BackendCine.Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendCine.Migrations
{
    [DbContext(typeof(CineDbContext))]
    partial class CineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BackendCine.Entities.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Apellido");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Documento");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Estado");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("FechaNacimiento");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Funcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AsientosDisponibles")
                        .HasColumnType("int")
                        .HasColumnName("AsientosDisponibles");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("Fecha");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time(6)")
                        .HasColumnName("HoraFin");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(6)")
                        .HasColumnName("HoraInicio");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioEntrada")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("PrecioEntrada");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdSala");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.GeneroXPelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdPelicula");

                    b.ToTable("GenerosXPeliculas");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int")
                        .HasColumnName("Duracion");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)")
                        .HasColumnName("img");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Sinopsis");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Titulo");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadAsientos")
                        .HasColumnType("int")
                        .HasColumnName("CantidadAsientos");

                    b.Property<string>("CodigoReserva")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("codigoReserva");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Estado");

                    b.Property<DateOnly>("FechaExpiracion")
                        .HasColumnType("date")
                        .HasColumnName("FechaExpiracion");

                    b.Property<DateOnly>("FechaReserva")
                        .HasColumnType("date")
                        .HasColumnName("FechaReserva");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncion")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("PrecioTotal");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdFuncion");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.ReservaXAsientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Estado");

                    b.Property<DateOnly>("FechaReserva")
                        .HasColumnType("date")
                        .HasColumnName("FechaReserva");

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdReserva");

                    b.ToTable("ReservasXAsientos");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("Capacidad");

                    b.Property<int>("Columnas")
                        .HasColumnType("int")
                        .HasColumnName("Columnas");

                    b.Property<int>("Filas")
                        .HasColumnType("int")
                        .HasColumnName("Filas");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("Company.TestProject1.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NomUsuario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NomUsuario");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<DateTime>("fecha_creacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("fecha_modificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("swt")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("usuario_creacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuario_modificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Funcion", b =>
                {
                    b.HasOne("BackendCine.Entities.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendCine.Entities.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.GeneroXPelicula", b =>
                {
                    b.HasOne("BackendCine.Entities.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendCine.Entities.Models.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.Reserva", b =>
                {
                    b.HasOne("BackendCine.Entities.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendCine.Entities.Models.Funcion", "Funcion")
                        .WithMany()
                        .HasForeignKey("IdFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Funcion");
                });

            modelBuilder.Entity("BackendCine.Entities.Models.ReservaXAsientos", b =>
                {
                    b.HasOne("BackendCine.Entities.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("IdReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Company.TestProject1.Usuario", b =>
                {
                    b.HasOne("BackendCine.Entities.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
